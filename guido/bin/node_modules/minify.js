/**
 * File combiner for Nodejs.
 * 
 * @author Assen Totin assen.totin@gmail.com
 * 
 * Created for the GUIdo project, copyright (C) 2014 Assen Totin, assen.totin@gmail.com
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

var CS = require('./stripper');

var Minify = function(options) {
	var cs = new CS();

	/**
	 * Minify multi-line text. 
	 * @params text String The text to minify.
	 * @returns String The minified text. 
	 */
	this.minifyText = function(text) {
		var stripped = cs.strip(text);

		var lines = stripped.split(/[\r\n]+/g);
		var output = '';
		
		for (var i=0; i<lines.length; i++) {
			// Skip empty lines
			if (lines[i].match(/^$/))
				continue;

			// Remove multiple spaces and tabs
			output += lines[i].replace(/\s+/g, ' ');
		}

		return output;
	};


	/**
	 * Helper function to minify a Buffer by first converting to string, then minifying and finally converting back to Buffer.
	 * Useful for minifying files read from the file system. 
	 * UTF-8 encoding always assumed.  
	 * @param buffer Buffer The binary buffer to minify. 
	 * @returns Buffer The minified buffer.  
	 */
	this.minifyBuffer = function(buffer) {
		var text = buffer.toString();
		var min = this.minifyText(text);
		return new Buffer(min);
	};
	
};

module.exports = Minify;
